[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "recovery-factor"
version = "0.1.0"
readme = "README.md"
dependencies = [
  #"hyperopt",
  "git+https://github.com/hyperopt/hyperopt.git@e9122b53041bf4bddff402ab6df251d379cf3420",
  "joblib",
  "matplotlib",
  "numpy",
  "pandas",
  "shap",
  "scikit-learn",
  "seaborn",
  "statsmodels",
  "xgboost",
  "xlrd",
  "yellowbrick",
  "openpyxl",
  "thefuzz[speedup]",
]

[project.scripts]
rf-train = "recovery_factor.train:main"


[project.optional-dependencies]
dev = ["black", "ruff", "pre-commit", "ipykernel", "jinja2"]


[tool.black]
line-length = 99
include = '\.pyi?$'

[tool.isort]
profile = "black"

[tool.pylint.format]
max-line-length = "99"

[tool.ruff]
select = [
  "E",
  "F",
  "W",    # flake8
  "B",
  "B904", # flake8-bugbear
  "I",    # isort
  "ARG",  # flake8-unused-arguments
  "C4",   # flake8-comprehensions
  "EM",   # flake8-errmsg
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "RET",  # flake8-return
  "RUF",  # Ruff-specific
  "SIM",  # flake8-simplify
  "T20",  # flake8-print
  "UP",   # pyupgrade
  "YTT",  # flake8-2020
]
extend-ignore = [
  "PLR",    # Design related pylint codes
  "PT004",  # Use underscore for non-returning fixture (use usefixture instead)
  "RET504", # 'unnecessary' variable assignment before return statement
]
line-length = 99
unfixable = [
  "T20",  # Removes print statements
  "F841", # Removes unused variables
]
exclude = []
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"noxfile.py" = ["T", "T201"]
"tests/**.py" = ["D101", "D102", "D103"]
